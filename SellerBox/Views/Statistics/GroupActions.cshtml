@model SellerBox.ViewModels.Statistics.GroupActionsViewModel

@{
    Random random = new Random();
    string[] backgroundColors = new string[7];
    for (int i = 0; i < 7; i++)
    {
        backgroundColors[i] = string.Format("#{0:X6}", random.Next(0x1000000));
    }
}

@section scripts {
    <script src="~/lib/chart.js/dist/Chart.bundle.min.js"></script>
    <script>
        var barChartData = {
            labels: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.ActionsPerDay.Select(x => x.Date.ToString("dd MMMM yyyyг.")).ToList())),
            datasets: [
            {
                label: 'Вступило в группу',
                backgroundColor: '@Html.Raw(backgroundColors[0])',
                data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.ActionsPerDay.Select(x => x.JoinGroupCount).ToList()))
            },
            {
                label: 'Вышло из группы',
                backgroundColor: '@Html.Raw(backgroundColors[1])',
                data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.ActionsPerDay.Select(x => x.LeaveGroupCount).ToList()))
            },
            {
                label: 'Запрет сообщений',
                backgroundColor: '@Html.Raw(backgroundColors[2])',
                data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.ActionsPerDay.Select(x => x.BlockMessagingCount).ToList()))
            },
            {
                label: 'Разрешение сообщений',
                backgroundColor: '@Html.Raw(backgroundColors[3])',
                data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.ActionsPerDay.Select(x => x.AcceptMessagingCount).ToList()))
            },
            {
                label: 'Отмена сообщений',
                backgroundColor: '@Html.Raw(backgroundColors[4])',
                data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.ActionsPerDay.Select(x => x.CancelMessagingCount).ToList()))
            },
            {
                label: 'Заблокировано',
                backgroundColor: '@Html.Raw(backgroundColors[5])',
                data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.ActionsPerDay.Select(x => x.BlockedCount).ToList()))
            },
            {
                label: 'Разблокировано',
                backgroundColor: '@Html.Raw(backgroundColors[6])',
                data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.ActionsPerDay.Select(x => x.UnblockedCount).ToList()))
            }]
        };

        window.onload = function () {
            var ctx = document.getElementById('chart').getContext('2d');
            window.myBar = new Chart(ctx, {
                type: 'bar',
                data: barChartData,
                options: {
                    tooltips: {
                        mode: 'index',
                        intersect: false
                    },
                    responsive: true,
                    scales: {
                        xAxes: [{
                            stacked: true,
                        }],
                        yAxes: [{
                            stacked: true
                        }]
                    }
                }
            });
        };
    </script>
}

<h2>Статистика по группе:</h2>

<div class="box-body" @{if (Model.TotalAcceptMessagingCount == 0 && Model.TotalBlockedCount == 0 && Model.TotalBlockMessagingCount == 0 && Model.TotalCancelMessagingCount == 0 && Model.TotalJoinGroupCount == 0 && Model.TotalLeaveGroupCount == 0 && Model.TotalUnblockedCount == 0) { <text> hidden</text>} }>
    <div class="chart-container">
        <canvas id="chart" style="width:100%; height:500px"></canvas>
    </div>
</div>
<h4>Всего:</h4>
<div style="display: flex; margin-left: 40px">
    <div style="height: 16px;  width: 16px; background-color: @Html.Raw(backgroundColors[0]); margin-right: 5px; margin-top: 4px"></div>
    Вступило в группу: @Model.TotalJoinGroupCount
</div>
<div style="display: flex; margin-left: 40px">
    <div style="height: 16px;  width: 16px; background-color: @Html.Raw(backgroundColors[1]); margin-right: 5px; margin-top: 4px"></div>
    Вышло из группы: @Model.TotalLeaveGroupCount
</div>
<div style="display: flex; margin-left: 40px">
    <div style="height: 16px;  width: 16px; background-color: @Html.Raw(backgroundColors[2]); margin-right: 5px; margin-top: 4px"></div>
    Запрет сообщений: @Model.TotalBlockMessagingCount
</div>
<div style="display: flex; margin-left: 40px">
    <div style="height: 16px;  width: 16px; background-color: @Html.Raw(backgroundColors[3]); margin-right: 5px; margin-top: 4px"></div>
    Разрешение сообщений: @Model.TotalAcceptMessagingCount
</div>
<div style="display: flex; margin-left: 40px">
    <div style="height: 16px;  width: 16px; background-color: @Html.Raw(backgroundColors[4]); margin-right: 5px; margin-top: 4px"></div>
    Отмена сообщений: @Model.TotalCancelMessagingCount
</div>
<div style="display: flex; margin-left: 40px">
    <div style="height: 16px;  width: 16px; background-color: @Html.Raw(backgroundColors[5]); margin-right: 5px; margin-top: 4px"></div>
    Заблокировано: @Model.TotalBlockedCount
</div>
<div style="display: flex; margin-left: 40px">
    <div style="height: 16px;  width: 16px; background-color: @Html.Raw(backgroundColors[6]); margin-right: 5px; margin-top: 4px"></div>
    Разблокировано: @Model.TotalUnblockedCount
</div>