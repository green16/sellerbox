@model IEnumerable<SellerBox.ViewModels.GroupsViewModel>

@{
    ViewData["Title"] = "Index";
}

@inject SellerBox.Common.Services.UserHelperService UserHelperService

@{
    long idSelectedGroup = -1;
    if (UserHelperService.HasSelectedGroup(User))
    {
        KeyValuePair<long, string> selectedGroup = UserHelperService.GetSelectedGroup(User);
        idSelectedGroup = selectedGroup.Key;
    }
}

@{
    bool hasElements = Model != null && Model.Any();
}
<h5 @{if (hasElements) { <text> hidden</text>} }>
    Нет ни одной администрируемой Вами группы.
</h5>
@if (hasElements)
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    №
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ImageUrl)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.IsConnected)
                </th>
            </tr>
        </thead>
        <tbody>
            @{int idx = 0; }
            @foreach (var item in Model)
            {
                idx++;
                <tr data-idgroup="@item.IdVk">
                    <td>
                        @idx
                    </td>
                    <td>
                        <img src="@item.ImageUrl" />
                    </td>
                    <td>
                        <a target="_blank" href="@item.Link">
                            @Html.DisplayFor(modelItem => item.Name)
                        </a>
                    </td>
                    <td>
                        @{ if (item.IsConnected)
                            {
                                <div>
                                    <form asp-action="Disconnect" method="post">
                                        <input asp-for="@item.IdVk" name="idGroup" type="hidden" />
                                        <button type="submit" class="btn btn-danger" title="Отвязать группу">Отвязать</button>
                                    </form>
                                    @if (idSelectedGroup == item.IdVk)
                                    {
                                        <span class="text-success">Текущая группа</span>
                                    }
                                    else
                                    {
                                        <form asp-action="SetCurrent" method="post">
                                            <input asp-for="@item.IdVk" name="idGroup" type="hidden" />
                                            <button type="submit" class="btn btn-success" title="Сделать текущей">Сделать текущей</button>
                                        </form>
                                    }
                                </div>
                            }
                            else
                            {
                                <form asp-action="Connect" method="post">
                                    <div>
                                        <input asp-for="@item.IdVk" name="idGroup" type="hidden" />
                                        <button type="submit" class="btn btn-primary" title="Связать с группой">Связать</button>
                                    </div>
                                </form>
                            }
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}