@using ReflectionIT.Mvc.Paging
@model PagingList<WebApplication1.ViewModels.Subscribers.MemberIndexViewModel>

@{
    ViewData["Title"] = "Index";
}

@section Scripts {
    <script src="~/lib/site/Subscribers/checkers.js"></script>
    <script src="~/lib/signalr/signalr.js"></script>
    <script type=text/javascript>
        var idGroup = @ViewBag.IdGroup;
        var syncType = 0;
    </script>
    <script src="~/lib/site/Subscribers/worker.js"></script>
}

@section Styles {
    <link href="~/lib/sass-bootstrap-glyphicons/css/bootstrap-glyphicons.css" rel="stylesheet" type="text/css" />
}

<h2 id="title">
    Список подписчиков группы "<span style="color: darkgray">@ViewBag.GroupName</span>"
    <a id="sync" href="#" hidden>синхронизировать</a>
</h2>

<div class="progress" hidden>
    <div id="syncProgress" class="progress-bar progress-bar-striped progress-bar-animated bg-warning" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="0" style="width: 100%"></div>
</div>

@if (!Model.Any())
{
    <h3>У группы нет подписчиков</h3>
}
else
{
    @await Html.PartialAsync("Pager", Model)

    <table class="table">
        <thead>
            <tr>
                <th>
                    №
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Photo)
                </th>
                <th>
                    @Html.SortableHeaderFor(model => model.FIO)
                </th>
                <th>
                    @Html.SortableHeaderFor(model => model.Sex)
                </th>
                <th>
                    @Html.SortableHeaderFor(model => model.Country)
                </th>
                <th>
                    @Html.SortableHeaderFor(model => model.City)
                </th>
                <th>
                    @Html.SortableHeaderFor(model => model.Birthday)
                </th>
                <th>
                    @Html.SortableHeaderFor(model => model.DtAdd)
                </th>
                <th>
                    @Html.SortableHeaderFor(model => model.IsSubscriber)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @{int idx = (Model.PageIndex - 1) * Model.PageSize; }
            @foreach (var item in Model)
            {
                idx++;
                <tr>
                    <td>
                        @idx
                    </td>
                    <td>
                        <img src="@item.Photo" />
                    </td>
                    <td>
                        <a target="_blank" href="@item.Link">
                            @Html.DisplayFor(modelItem => item.FIO)
                        </a>
                    </td>
                    <td>
                        @if (item.Sex.HasValue)
                        {
                            @if (item.Sex.Value)
                            {
                                <img src="~/images/IconFemale.png" />
                            }
                            else
                            {
                                <img src="~/images/IconMale.png" />
                            }
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Country)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.City)
                    </td>
                    <td>
                        @if (item.Birthday.HasValue)
                        {
                            @if (item.Birthday.Value.Year == DateTime.MinValue.Year)
                            {
                                @item.Birthday.Value.ToString("dd MMMM")
                            }
                            else
                            {
                                @Html.DisplayFor(modelItem => item.Birthday)
                            }
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DtAdd)
                    </td>
                    <td>
                        @if (item.IsSubscriber.HasValue)
                        {
                            if (item.IsSubscriber.Value)
                            {
                                <text>да</text>
                            }
                            else
                            {
                                <text>нет</text>
                            }
                        }
                        else
                        {
                            <a href="#" data-idVk="@item.IdVk" class="updateIsSubscriber">
                                Неизвестно
                            </a>
                        }
                    </td>
                    <td>
                        <a asp-action="Card" asp-route-idSubscriber="@item.Id">
                            <img src="~/images/Details.png" />
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    @await Html.PartialAsync("Pager", Model)
}